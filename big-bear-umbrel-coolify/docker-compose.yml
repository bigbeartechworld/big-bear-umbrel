# Configuration for coolify setup
# Name of the big-bear-coolify application
version: "3.7"
# Service definitions for the big-bear-coolify application
services:
  app_proxy:
    environment:
      APP_HOST: big-bear-umbrel-coolify_big-bear-coolify_1
      APP_PORT: "8080"
  # Service name: big-bear-coolify
  # The `big-bear-coolify` service definition
  big-bear-coolify:
    # Image to be used for the container specifies the fastfetch version and source
    image: ghcr.io/coollabsio/coolify:4.0.0-beta.434
    # Container restart policy - restarts the container unless manually stopped
    restart: unless-stopped
    # Environment variables for the container
    environment:
      - PHP_MEMORY_LIMIT="512M"
      - APP_ID="coolify"
      - APP_ENV="production"
      - APP_DEBUG="false"
      - APP_NAME="Coolify"
      - APP_KEY="base64:lSStPbXB/yW6cxXIz8fauQ937PbSUktTdIf7R05szQ4="
      - APP_URL="http://[CASAOS_IP]:8000"
      - DB_CONNECTION="pgsql"
      - DB_HOST="big-bear-coolify-postgres"
      - DB_PORT="5432"
      - DB_DATABASE="coolify"
      - DB_USERNAME="coolify"
      - DB_PASSWORD="f1986213-9d72-4c36-bbd4-adca2f414fa1"
      - QUEUE_CONNECTION="redis"
      - REDIS_HOST="big-bear-coolify-redis"
      - REDIS_PASSWORD="9e3df6aa-ea48-4e59-a9c4-59798f1ba9b4"
      - HORIZON_BALANCE="100"
      - HORIZON_MAX_PROCESSES="10"
      - HORIZON_BALANCE_MAX_SHIFT="10"
      - HORIZON_BALANCE_COOLDOWN="10"
      - SSL_MODE="off"
      - PHP_PM_CONTROL="dynamic"
      - PHP_PM_START_SERVERS="1"
      - PHP_PM_MIN_SPARE_SERVERS="1"
      - PHP_PM_MAX_SPARE_SERVERS="10"
      - PUSHER_HOST="big-bear-coolify-soketi"
      - PUSHER_BACKEND_HOST="big-bear-coolify-soketi"
      - PUSHER_PORT="6001"
      - PUSHER_BACKEND_PORT="6001"
      - PUSHER_SCHEME="http"
      - PUSHER_APP_ID="coolify"
      - PUSHER_APP_KEY=
      - PUSHER_APP_SECRET=
      - AUTOUPDATE=true
      - SELF_HOSTED=true
      - SSH_MUX_PERSIST_TIME=3600
      - FEEDBACK_DISCORD_WEBHOOK=
      - WAITLIST=
      - SUBSCRIPTION_PROVIDER=
      - STRIPE_API_KEY=
      - STRIPE_WEBHOOK_SECRET=
      - STRIPE_PRICE_ID_BASIC_MONTHLY=
      - STRIPE_PRICE_ID_BASIC_YEARLY=
      - STRIPE_PRICE_ID_PRO_MONTHLY=
      - STRIPE_PRICE_ID_PRO_YEARLY=
      - STRIPE_PRICE_ID_ULTIMATE_MONTHLY=
      - STRIPE_PRICE_ID_ULTIMATE_YEARLY=
      - STRIPE_PRICE_ID_DYNAMIC_MONTHLY=
      - STRIPE_PRICE_ID_DYNAMIC_YEARLY=
      - STRIPE_PRICE_ID_BASIC_MONTHLY_OLD=
      - STRIPE_PRICE_ID_BASIC_YEARLY_OLD=
      - STRIPE_PRICE_ID_PRO_MONTHLY_OLD=
      - STRIPE_PRICE_ID_PRO_YEARLY_OLD=
      - STRIPE_PRICE_ID_ULTIMATE_MONTHLY_OLD=
      - STRIPE_PRICE_ID_ULTIMATE_YEARLY_OLD=
      - STRIPE_EXCLUDED_PLANS=
    # Mount necessary volumes for accessing system information
    volumes:
      # ssh-keygen -f /DATA/AppData/big-bear-coolify/ssh/keys/id.root@host.docker.internal -t ed25519 -N '' -C root@coolify
      - ${APP_DATA_DIR}/ssh:/var/www/html/storage/app/ssh
      - ${APP_DATA_DIR}/applications:/var/www/html/storage/app/applications
      - ${APP_DATA_DIR}/databases:/var/www/html/storage/app/databases
      - ${APP_DATA_DIR}/services:/var/www/html/storage/app/services
      - ${APP_DATA_DIR}/backups:/var/www/html/storage/app/backups
      - ${APP_DATA_DIR}/webhooks-during-maintenance:/var/www/html/storage/app/webhooks-during-maintenance
      - ${APP_DATA_DIR}/logs:/var/www/html/storage/logs
    healthcheck:
      test: curl --fail http://127.0.0.1:8080/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    depends_on:
      big-bear-coolify-postgres:
        condition: service_healthy
      big-bear-coolify-redis:
        condition: service_healthy
    networks:
      - big_bear_coolify_network
  big-bear-coolify-postgres:
    image: postgres:15-alpine
    volumes:
      - ${APP_DATA_DIR}/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "coolify"
      POSTGRES_PASSWORD: "f1986213-9d72-4c36-bbd4-adca2f414fa1"
      POSTGRES_DB: "coolify"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coolify", "-d", "coolify"]
      interval: 5s
      retries: 10
      timeout: 2s
    networks:
      - big_bear_coolify_network
  big-bear-coolify-redis: # Redis service configuration
    image: redis:8.2.2-alpine@sha256:1c78f5e7512cc8b22b0edc95c20e7abd9e1fd832e5dfd5c3c6b59ce82fb238d0
    command: ["redis-server", "--save", "20", "1", "--loglevel", "warning", "--requirepass", "9e3df6aa-ea48-4e59-a9c4-59798f1ba9b4"]
    environment:
      REDIS_PASSWORD: "9e3df6aa-ea48-4e59-a9c4-59798f1ba9b4"
    volumes:
      - ${APP_DATA_DIR}/redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 10
      timeout: 2s
    networks:
      - big_bear_coolify_network
  big-bear-coolify-soketi:
    image: quay.io/soketi/soketi:1.6-16-alpine
    environment:
      SOKETI_DEBUG: "false"
      SOKETI_DEFAULT_APP_ID: ""
      SOKETI_DEFAULT_APP_KEY: ""
      SOKETI_DEFAULT_APP_SECRET: ""
    healthcheck:
      test: wget -qO- http://127.0.0.1:6001/ready || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    networks:
      - big_bear_coolify_network
networks:
  big_bear_coolify_network:
    name: big_bear_coolify_network
    driver: bridge
  coolify:
    external: true
