# Configuration for unifi-network-application-mongo-4 setup
# Name of the big-bear-unifi-network-application-mongo-4 application
version: "3.7"
# Service definitions for the big-bear-unifi-network-application-mongo-4 application
services:
  app_proxy:
    environment:
      APP_HOST: big-bear-umbrel-unifi-network-application-mongo-4_app_1
      APP_PORT: "8443"
  # Main application service
  app: # Name of the service
    image: linuxserver/unifi-network-application:9.5.21 # Docker image to use
    environment: # Environmental variables for the container
      - PUID=1000 # User ID
      - PGID=1000 # Group ID
      - TZ=Etc/UTC # Timezone
      - MONGO_HOST=big-bear-unifi-db # MongoDB host
      - MONGO_USER=unifi # MongoDB username
      - MONGO_PASS=unifi_password # MongoDB password
      - MONGO_PORT=27017 # MongoDB port
      - MONGO_DBNAME=unifi # MongoDB database name
      - MEM_LIMIT=1024 #optional  # Memory limit for the container
      - MEM_STARTUP=1024 #optional  # Memory to allocate on container startup
      - MONGO_TLS= #optional  # MongoDB TLS setting
      - MONGO_AUTHSOURCE= #optional  # MongoDB authentication source
    volumes: # Volumes to mount in the container
      - ${APP_DATA_DIR}/config:/config # Map host directory to container directory
    restart: unless-stopped # Restart policy for the container
    networks: # Networks to join
      - unifi-nework-application-network
    depends_on:
      - unifi-db
  # MongoDB database for the application
  unifi-db:
    image: mongo:4.4.28
    volumes:
      - ${APP_DATA_DIR}/db/data:/data/db # MongoDB data persistence
      - /DATA/AppData/big-bear-unifi-network-application/db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks: # Networks to join
      - unifi-nework-application-network
    restart: unless-stopped # Restart policy
# Networks used by the application
networks:
  # Define the network for AdGuard Home
  unifi-nework-application-network:
    driver: bridge
