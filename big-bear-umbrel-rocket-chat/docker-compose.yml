# Configuration for Rocket.Chat setup in a containerized environment

# Application Name
# This sets the name of the Rocket.Chat application.
name: big-bear-rocket-chat
# Service definitions
# Defining the services required for the Rocket.Chat application.
services:
  # Service: app
  # This service is for the Rocket.Chat application itself.
  app:
    # Container name
    # This names the Docker container for easy reference.
    container_name: big-bear-rocket-chat
    # Docker Image
    # Specifies the Docker image to use for Rocket.Chat.
    image: rocket.chat:6.13.1
    # Restart Policy
    # Determines how the container should be handled if it stops.
    restart: unless-stopped
    # Environment variables
    # These variables are used by Rocket.Chat for its configuration.
    environment:
      MONGO_OPLOG_URL: mongodb://db:27017/local
      ROOT_URL: http://localhost:3000
    # Port Mappings
    # Maps ports from the container to the host system.
    ports:
      - "3000:3000" # HostPort:ContainerPort
    # Dependencies
    # Specifies other services that this service depends on.
    depends_on:
      db:
        condition: service_healthy
    # Networks
    # Assigns the app service to a network.
    networks:
      - rocketchat-net
  # Service: db
  # This service runs the MongoDB database used by Rocket.Chat.
  db:
    image: mongo:4.4.28
    container_name: big-bear-rocketchat-db
    volumes:
      # Persistent storage for MongoDB
      - ${APP_DATA_DIR}/db:/data/db
    # Health Check
    # Checks the health of the MongoDB service.
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Networks
    networks:
      - rocketchat-net
  app_proxy:
    environment:
      APP_HOST: big-bear-umbrel-rocket-chat_app_1
      APP_PORT: "3020"
# Networks
# Defines the network configurations used by the services.
networks:
  rocketchat-net:
    driver: bridge
