
version: "3.7"
services:
  big-bear-nocodb:
    image: nocodb/nocodb:0.265.1 # Specifies the Docker image to use for NocoDB
    restart: unless-stopped # Container restart policy to ensure availability
    environment: # Environment variables for configuring NocoDB
      - DATABASE_URL=postgres://nocodb:nocodb@big-bear-nocodb-db:5432/nocodb # Connection string for the PostgreSQL database
      - NC_AUTH_JWT_SECRET=899499fc-36a0-4131-b077-7bb9f051ac9b # JWT secret for authentication
      - NC_REDIS_URL=redis://default:casaos@big-bear-nocodb-redis:6379 # Connection string for Redis
    volumes:
      - ${APP_DATA_DIR}/data:/usr/src/app/data # Maps persistent data storage for NocoDB
    networks:
      - big-bear-nocodb-network # Connects to the custom network
  big-bear-nocodb-db:
    image: postgres:13 # Specifies the PostgreSQL Docker image to use
    restart: always # Ensures the database container is always running
    environment: # Database credentials and configurations
      POSTGRES_DB: nocodb # Database name
      POSTGRES_USER: nocodb # Database user
      POSTGRES_PASSWORD: nocodb # Database password
    volumes:
      - ${APP_DATA_DIR}/pgdata:/var/lib/postgresql/data # Persistent storage for the database
    networks:
      - big-bear-nocodb-network # Connects to the custom network
  big-bear-nocodb-redis:
    image: redis:8.2.2-alpine@sha256:1c78f5e7512cc8b22b0edc95c20e7abd9e1fd832e5dfd5c3c6b59ce82fb238d0 # Specifies the Redis Docker image to use
    restart: unless-stopped # Ensures Redis container is available unless manually stopped
    command: ["redis-server", "--requirepass", "casaos"] # Starts Redis with a password
    volumes:
      - ${APP_DATA_DIR}/redis:/data # Persistent storage for Redis data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"] # Health check command for Redis
      interval: 1s # Interval between health checks
      timeout: 3s # Timeout for each health check
      retries: 30 # Number of retries before considering the service unhealthy
    networks:
      - big-bear-nocodb-network # Connects to the custom network
  app_proxy:
    environment:
      APP_HOST: big-bear-umbrel-nocodb_big-bear-nocodb_1
      APP_PORT: "8080"
networks:
  big-bear-nocodb-network:
    driver: bridge # Uses a bridge network for inter-container communication
